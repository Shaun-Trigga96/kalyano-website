/* src/components/bookingModal.module.css */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent overlay */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
}

.light.modalOverlay {
  background-color: rgba(0, 0, 0, 0.7); /* Maintain dark overlay for light mode */
}

.dark.modalOverlay {
  background-color: rgba(0, 0, 0, 0.8); /* Slightly darker for dark mode */
}

.modalContent {
  background: var(--background);
  color: var(--text);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: var(--shadow);
  width: 100%;
  max-width: 500px;
  position: relative;
  text-align: center;
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}

.closeButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--secondary-text);
  transition: color 0.2s ease;
}

.closeButton:hover {
  color: var(--accent);
}

.modalContent h2 {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--text);
  margin-bottom: 1rem;
}

.modalContent p {
  color: var(--secondary-text);
  font-size: 1rem;
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

.modalContent a {
  color: var(--accent);
  text-decoration: none;
}

.modalContent a:hover {
  text-decoration: underline;
}

.bookingOptions {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 1.5rem;
}

.bookingButton {
  background: linear-gradient(90deg, #800080, #a855f7);
  color: white;
  font-weight: 600;
  padding: 0.875rem 1.5rem;
  border-radius: 12px;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  text-decoration: none;
  display: inline-block;
  font-size: 0.9rem;
}

.bookingButton:hover {
  background: linear-gradient(90deg, #6b0066, #9333ea);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(128, 0, 128, 0.3);
}

/* Define secondary text for themes */
:root[data-theme="light"] {
  --secondary-text: #6E6E73; /* iOS secondary text for light mode */
}

:root[data-theme="dark"] {
  --secondary-text: #AEAEB2; /* iOS secondary text for dark mode */
}